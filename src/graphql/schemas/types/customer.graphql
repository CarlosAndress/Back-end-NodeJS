type Customer {
  _id:ID!
  Name:String!
  Lastname:String!
  Age:Int!
  Phonenumber:String!
  Email:String!
  password:String!
  city:String!
}

input AuthCustomer{
  Email:String!
  password:String!
}

input SendRecovery{
  Email:String!
}

input changePassword{
  token:String!
  newpassword:String!
}

input FilterCustomer {
  _id:ID
  Name:String
  Lastname:String
  Age:Int
  Phonenumber:String
  Email:String
  password:String
  city:String
}

input CreateCustomer {
  Name:String!
  Lastname:String!
  Age:Int!
  Phonenumber:String!
  Email:String!
  password:String
  city:String!
}

input UpdateCustomer {
  _id:ID!
  Name:String
  Lastname:String
  Age:Int
  Phonenumber:String
  Email:String
  password:String
  city:String
}

input DeleteCustomer {
  _id:ID!
}

type Token {
  token: String!
}

type Query {
  customers: [Customer]!
}

type Mutation {
  authCustomer(customer: AuthCustomer): Token!
  sendRecovery(customer: SendRecovery): String!
  changepassword(customer:changePassword):String!
  createCustomer(customer: CreateCustomer): Customer!
  updateCustomer(customer: UpdateCustomer): Customer!
  deleteCustomer(customer: DeleteCustomer): String!
}
